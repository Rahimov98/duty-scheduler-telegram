require('dotenv').config(); // –≠—Ç–∞ —Å—Ç—Ä–æ–∫–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –≤–∞—à —Ç–æ–∫–µ–Ω –∏–∑ —Ñ–∞–π–ª–∞ .env

const express = require('express');
const axios = require('axios');
const cron = require('node-cron');
const fs = require('fs');
const path = require('path');

const app = express();
const PORT = process.env.PORT || 3000; // –°–µ—Ä–≤–µ—Ä –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ –ø–æ—Ä—Ç—É 3000

// --- –ù–ê–°–¢–†–û–ô–ö–ò TELEGRAM –ë–û–¢–ê ---
const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN; 
const TELEGRAM_API = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}`;

// –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
if (!TELEGRAM_BOT_TOKEN) {
    console.error("–û–®–ò–ë–ö–ê: –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª .env –≤ –ø–∞–ø–∫–µ backend.");
    // –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—Å–∫–∞–ª—Å—è –±–µ–∑ —Ç–æ–∫–µ–Ω–∞, —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–æ–∫—É:
    // process.exit(1); 
}

// –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö (—Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –∏ –∞—Ä—Ö–∏–≤ –¥–µ–∂—É—Ä—Å—Ç–≤)
const DATA_FILE = path.join(__dirname, 'data.json');

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
let employees = [];
let dutyArchive = [];

// --- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª ---
function loadData() {
    try {
        if (fs.existsSync(DATA_FILE)) {
            // –ï—Å–ª–∏ —Ñ–∞–π–ª –¥–∞–Ω–Ω—ã—Ö —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —á–∏—Ç–∞–µ–º –µ–≥–æ
            const data = JSON.parse(fs.readFileSync(DATA_FILE, 'utf8'));
            employees = data.employees || [];
            dutyArchive = data.dutyArchive || [];
            console.log('–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ —Ñ–∞–π–ª–∞.');
        } else {
            // –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
            employees = [
                { name: "JAHONGIRI SH", telegramId: "" }, // –ü–û–õ–£–ß–ò–¢–ï Telegram ID –∫–∞–∂–¥–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –∏ –≤—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞
                                                                           // –ù–∞–ø—Ä–∏–º–µ—Ä: { name: "RAHIMOV S", telegramId: "123456789" }
                { name: "ABDURAHMONOV Z", telegramId: "1325889135" },
                 { name: "RAHIMOV S", telegramId: "1160041716" },                                                        // –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å ID, –ø–æ–ø—Ä–æ—Å–∏—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –Ω–∞–ø–∏—Å–∞—Ç—å —á—Ç–æ-–Ω–∏–±—É–¥—å –≤–∞—à–µ–º—É –±–æ—Ç—É,
                { name: "RUSLAN K", telegramId: "" },      // –∞ –∑–∞—Ç–µ–º –æ—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ: https://api.telegram.org/bot–í–ê–®_–¢–û–ö–ï–ù_–ë–û–¢–ê/getUpdates
                { name: "DUSTOV M", telegramId: "" },      // –ù–∞–π–¥–∏—Ç–µ –ø–æ–ª–µ "chat":{"id":...}
                { name: "DAVLATOV A", telegramId: "" },
                { name: "ALIMOV Y", telegramId: "" },
            ];
            dutyArchive = [];
            saveData(); // –°–æ—Ö—Ä–∞–Ω—è–µ–º —ç—Ç–∏ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –Ω–æ–≤—ã–π data.json
            console.log('–§–∞–π–ª –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–Ω—ã –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö:', error);
        // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—É—Å—Ç—ã–º–∏ —Å–ø–∏—Å–∫–∞–º–∏
        employees = [];
        dutyArchive = [];
    }
}

function saveData() {
    fs.writeFileSync(DATA_FILE, JSON.stringify({ employees, dutyArchive }, null, 2), 'utf8');
    console.log('–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª.');
}

// --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Express (API –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–æ–º) ---
app.use(express.json()); // –î–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON-–∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
app.use(express.static(path.join(__dirname, 'public'))); // –†–∞–∑–¥–∞—á–∞ index.html –∏–∑ –ø–∞–ø–∫–∏ public

// API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
app.get('/api/employees', (req, res) => {
    res.json(employees);
});

app.post('/api/employees', (req, res) => {
    employees = req.body; // –§—Ä–æ–Ω—Ç–µ–Ω–¥ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–µ—Å—å –º–∞—Å—Å–∏–≤ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
    saveData();
    res.status(200).send('Employees updated');
});

app.get('/api/archive', (req, res) => {
    res.json(dutyArchive);
});

app.post('/api/archive', (req, res) => {
    dutyArchive = req.body; // –§—Ä–æ–Ω—Ç–µ–Ω–¥ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–µ—Å—å –º–∞—Å—Å–∏–≤ –∞—Ä—Ö–∏–≤–∞
    saveData();
    res.status(200).send('Archive updated');
});

// --- –õ–æ–≥–∏–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –¥–µ–∂—É—Ä–Ω—ã—Ö ---
function getNextSaturday(date = new Date()) {
    const day = date.getDay(); // 0 - –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ, 6 - —Å—É–±–±–æ—Ç–∞
    const diff = (6 - day + 7) % 7;
    const nextSat = new Date(date);
    nextSat.setDate(date.getDate() + diff);
    nextSat.setHours(0, 0, 0, 0); // –û–±–Ω—É–ª—è–µ–º –≤—Ä–µ–º—è
    return nextSat;
}

function getInitialStartDate() {
    const initialDate = new Date(2025, 0, 4); // –ù–∞—á–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞ –≥—Ä–∞—Ñ–∏–∫–∞: 4 —è–Ω–≤–∞—Ä—è 2025 –≥–æ–¥–∞
    const dayOfWeek = initialDate.getDay();
    if (dayOfWeek === 6) { // –ï—Å–ª–∏ —ç—Ç–æ —É–∂–µ —Å—É–±–±–æ—Ç–∞
        initialDate.setHours(0, 0, 0, 0);
        return initialDate;
    } else { // –ò–Ω–∞—á–µ, –Ω–∞—Ö–æ–¥–∏–º –±–ª–∏–∂–∞–π—à—É—é —Å—É–±–±–æ—Ç—É –ø–æ—Å–ª–µ —ç—Ç–æ–π –¥–∞—Ç—ã
        const diff = (6 - dayOfWeek + 7) % 7;
        initialDate.setDate(initialDate.getDate() + diff);
        initialDate.setHours(0, 0, 0, 0);
        return initialDate;
    }
}

function getDutyForDate(date) {
    const targetDate = new Date(date);
    targetDate.setHours(0, 0, 0, 0);

    // –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º –≤ –∞—Ä—Ö–∏–≤–µ (—Ä—É—á–Ω—ã–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∏–º–µ—é—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
    const archivedDuty = dutyArchive.find(entry => {
        const archiveDate = new Date(entry.date);
        archiveDate.setHours(0, 0, 0, 0);
        return archiveDate.getTime() === targetDate.getTime();
    });
    if (archivedDuty) {
        return archivedDuty.employee;
    }

    // –ï—Å–ª–∏ –≤ –∞—Ä—Ö–∏–≤–µ –Ω–µ—Ç, –≤—ã—á–∏—Å–ª—è–µ–º –ø–æ —Ü–∏–∫–ª–∏—á–µ—Å–∫–æ–º—É –≥—Ä–∞—Ñ–∏–∫—É
    const startDate = getInitialStartDate();
    const weeksPassed = Math.floor((targetDate - startDate) / (7 * 24 * 60 * 60 * 1000));

    if (weeksPassed < 0 || employees.length === 0) {
        return null; // –î–∞—Ç–∞ –¥–æ –Ω–∞—á–∞–ª–∞ –≥—Ä–∞—Ñ–∏–∫–∞ –∏–ª–∏ –Ω–µ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
    }

    const index = (weeksPassed % employees.length + employees.length) % employees.length;
    return employees[index] ? employees[index].name : null;
}

// --- –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram ---
async function sendTelegramMessage(chatId, message) {
    if (!TELEGRAM_BOT_TOKEN) {
        console.error("–û—à–∏–±–∫–∞: Telegram bot token –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞.");
        return;
    }
    try {
        const url = `${TELEGRAM_API}/sendMessage`;
        await axios.post(url, {
            chat_id: chatId,
            text: message,
            parse_mode: 'Markdown' // –î–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∂–∏—Ä–Ω—ã–π —à—Ä–∏—Ñ—Ç)
        });
        console.log(`–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram –¥–ª—è chat ID ${chatId}`);
    } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram –¥–ª—è chat ID ${chatId}:`, error.response ? error.response.data : error.message);
    }
}

// --- –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ Cron –¥–ª—è Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π ---
// –ó–∞–¥–∞—á–∞ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –∫–∞–∂–¥—É—é –ø—è—Ç–Ω–∏—Ü—É –≤ 18:00 (6 PM)
// –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å "Asia/Dushanbe"
cron.schedule('07 12 * * 5', async () => { // 0 –º–∏–Ω—É—Ç, 18 —á–∞—Å–æ–≤, –ª—é–±–æ–π –¥–µ–Ω—å –º–µ—Å—è—Ü–∞, –ª—é–±–æ–π –º–µ—Å—è—Ü, 5 = –ø—è—Ç–Ω–∏—Ü–∞
    console.log('–ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏ Cron: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–µ–∂—É—Ä–Ω—ã—Ö –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—É–±–±–æ—Ç—É...');

    const today = new Date();
    const nextSaturday = getNextSaturday(today); // –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É —Å–ª–µ–¥—É—é—â–µ–π —Å—É–±–±–æ—Ç—ã
    const nextSaturdayFormatted = nextSaturday.toLocaleDateString('ru-RU', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' });

    const dutyEmployeeName = getDutyForDate(nextSaturday); // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫—Ç–æ –¥–µ–∂—É—Ä–∏—Ç

    if (dutyEmployeeName) {
        // –ù–∞—Ö–æ–¥–∏–º –æ–±—ä–µ–∫—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –ø–æ –∏–º–µ–Ω–∏, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –µ–≥–æ Telegram ID
        const dutyEmployee = employees.find(emp => emp.name === dutyEmployeeName);
        if (dutyEmployee && dutyEmployee.telegramId) {
            const message = `üëã –ü—Ä–∏–≤–µ—Ç, *${dutyEmployee.name}*! –ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ *–∑–∞–≤—Ç—Ä–∞, ${nextSaturdayFormatted}*, –≤—ã –¥–µ–∂—É—Ä–∏—Ç–µ.`;
            await sendTelegramMessage(dutyEmployee.telegramId, message);
        } else {
            console.log(`–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ Telegram ID –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ "${dutyEmployeeName}" –∏–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç/–Ω–µ –∏–º–µ–µ—Ç ID.`);
        }
    } else {
        console.log('–î–µ–∂—É—Ä–Ω—ã–π –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—É–±–±–æ—Ç—É –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω (–≤–æ–∑–º–æ–∂–Ω–æ, –Ω–µ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤).');
    }
}, {
    timezone: "Asia/Dushanbe" // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–∞ –≤—Ä–µ–º–µ–Ω–Ω–∞—è –∑–æ–Ω–∞ –≤–µ—Ä–Ω–∞ –¥–ª—è –≤–∞—à–∏—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
});

// --- –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ ---
loadData(); // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, () => {
    console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);
    console.log(`–í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É http://localhost:${PORT}/index.html`);
});